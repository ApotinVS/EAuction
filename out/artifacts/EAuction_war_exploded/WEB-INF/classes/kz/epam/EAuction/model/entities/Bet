public class Bet extends Entity implements Serializable {

	private static final long serialVersionUID = 1L;
	private int userId;
	private int statusId;
  private float rating;
  private Timestamp betDate;

	/**
	 * Default constructor
	 */
	public Order() {
  super();
	}

	/**
	 * @param userId
	 * @param statusId
	 * @param betDate
	 * @param rating
	 */
	public Order(int orderId, int userId, int statusId,
			 float rating, Timestamp betDate) {
		super(orderId);
		this.userId = userId;
		this.statusId = statusId;
		this.rating = rating;
    this.betDate = betDate;
	}

	@Override
	public int getId() {

		return super.getId();
	}

	@Override
	public void setId(int id) {
		super.setId(id);
	}

	/**
	 * @return the userId
	 */
	public int getUserId() {
		return userId;
	}

	/**
	 * @param userId the userId to set
	 */
	public void setUserId(int userId) {
		this.userId = userId;
	}
	
	/**
	 * @return the statusId
	 */
	public int getStatusId() {
		return statusId;
	}

	/**
	 * @param statusId the statusId to set
	 */
	public void setStatusId(int statusId) {
		this.statusId = statusId;
	}

	/**
	 * @return the betDate
	 */
	public Timestamp getBetDate() {
		return betDate;
	}

  /**
	 * @param rating the rating to set
	 */
	public void setRating(float rating) {
		this.rating = rating;
	}
  
  /**
	 * @param orderDate the betDate to set
	 */
	public void setBetDate(Timestamp betDate) {
		this.betDate = betDate;
	}

	/**
	 * @return the rating
	 */
	public float getRating() {
		return rating;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = super.hashCode();
		result = prime * result
				+ ((betDate == null) ? 0 : betDate.hashCode());
		result = prime * result + statusId;
		result = prime * result + Float.floatToIntBits(rating);
		result = prime * result + userId;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (!super.equals(obj))
			return false;
		if (getClass() != obj.getClass())
			return false;
		Order other = (Order) obj;
		if (orderDate == null) {
			if (other.orderDate != null)
				return false;
		} else if (!betDate.equals(other.betDate))
			return false;
		if (statusId != other.statusId)
			return false;
		if (Float.floatToIntBits(rating) != Float
				.floatToIntBits(other.rating))
			return false;
		if (userId != other.userId)
			return false;
		return true;
	}

	@Override
	public String toString() {
		return userId +"::"+
				statusId +"::"+
				rating +"::"+
				betDate;
	}
	
}
